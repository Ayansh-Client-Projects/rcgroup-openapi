openapi: 3.0.3

info:
  title: RC Group - User
  description: Customer, Salesman, and Admin user service
  version: 1.0.0

servers:
  - url: https://api.rcgroup.client.embrays.live/user
    description: Production server (uses live data)
  - url: https://api-dev.rcgroup.client.embrays.live/user
    description: Development server (uses test data)

paths:
  /v1/customers:
    get:
      security:
        - BearerAuth: []
      operationId: getCustomerList
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Get user list based on search query
        - in: query
          name: pincode
          schema:
            type: integer
          required: false
          description: Get user list based on pincode query
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Get user list based on page number for pagination
        - in: query
          name: perPageQty
          schema:
            type: integer
          required: false
          description: Get N (perPageQty) number of users in this response
      responses:
        '200':
          description: Successfully fetched customer list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerList"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
  /v1/customers/v1/{customerId}:
    get:
      security:
        - BearerAuth: []
      operationId: getCustomerInfo
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
          description: Customer ID whose information is to be fetched
      responses:
        '200':
          description: Successfully fetched customer info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
    post:
      security:
        - BearerAuth: []
      operationId: updateCustomerInfo
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
          description: Customer ID whose information is to be fetched
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerUpdateRequestBody"
      responses:
        '200':
          description: Successfully updated customer info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
  
  /v1/salesmen:
    get:
      security:
        - BearerAuth: []
      operationId: getSalesmenList
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Get user list based on search query
        - in: query
          name: pincode
          schema:
            type: integer
          required: false
          description: Get user list based on pincode query
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Get user list based on page number for pagination
        - in: query
          name: perPageQty
          schema:
            type: integer
          required: false
          description: Get N (perPageQty) number of users in this response
      responses:
        '200':
          description: Successfully fetched salesman list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesmanList"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
  /v1/salesmen/v1/{salesmanId}:
    get:
      security:
        - BearerAuth: []
      operationId: getSalesmanInfo
      parameters:
        - in: path
          name: salesmanId
          schema:
            type: string
          required: true
          description: Salesman ID whose information is to be fetched
      responses:
        '200':
          description: Successfully fetched salesman info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Salesman"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
    post:
      security:
        - BearerAuth: []
      operationId: updateSalesmanInfo
      parameters:
        - in: path
          name: salesmanId
          schema:
            type: string
          required: true
          description: Salesman ID whose information is to be fetched
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SalesmanUpdateRequestBody"
      responses:
        '200':
          description: Successfully updated salesman info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Salesman"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
  
  /v1/admin-staffs:
    get:
      security:
        - BearerAuth: []
      operationId: getAdminStaffList
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Get user list based on search query
        - in: query
          name: pincode
          schema:
            type: integer
          required: false
          description: Get user list based on pincode query
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Get user list based on page number for pagination
        - in: query
          name: perPageQty
          schema:
            type: integer
          required: false
          description: Get N (perPageQty) number of users in this response
      responses:
        '200':
          description: Successfully fetched admin staff list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminStaffList"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
  /v1/admin-staffs/v1/{adminStaffId}:
    get:
      security:
        - BearerAuth: []
      operationId: getAdminStaffInfo
      parameters:
        - in: path
          name: adminStaffId
          schema:
            type: string
          required: true
          description: Admin Staff ID whose information is to be fetched
      responses:
        '200':
          description: Successfully fetched admin staff info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminStaff"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
    post:
      security:
        - BearerAuth: []
      operationId: updateAdminStaffInfo
      parameters:
        - in: path
          name: adminStaffId
          schema:
            type: string
          required: true
          description: Admin Staff ID whose information is to be fetched
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminStaffUpdateRequestBody"
      responses:
        '200':
          description: Successfully updated admin staff info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminStaff"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
  
  /v1/admins:
    get:
      security:
        - BearerAuth: []
      operationId: getAdminList
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Get user list based on search query
        - in: query
          name: pincode
          schema:
            type: integer
          required: false
          description: Get user list based on pincode query
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Get user list based on page number for pagination
        - in: query
          name: perPageQty
          schema:
            type: integer
          required: false
          description: Get N (perPageQty) number of users in this response
      responses:
        '200':
          description: Successfully fetched admin list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminList"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
  /v1/admins/v1/{adminId}:  
    get:
      security:
        - BearerAuth: []
      operationId: getAdminInfo
      parameters:
        - in: path
          name: adminId
          schema:
            type: string
          required: true
          description: Admin ID whose information is to be fetched
      responses:
        '200':
          description: Successfully fetched admin info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Admin"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
    post:
      security:
        - BearerAuth: []
      operationId: updateAdminInfo
      parameters:
        - in: path
          name: adminId
          schema:
            type: string
          required: true
          description: Admin ID whose information is to be fetched
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUpdateRequestBody"
      responses:
        '200':
          description: Successfully updated admin info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Admin"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'

  /v1/user:
    get:
      security:
        - BearerAuth: []
      operationId: getUserInfo
      responses:
        '200':
          description: Successfully fetched currently logged in user info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        'default':
          description: 'Unsuccessful request - User/Server Error'
          content:
            application/json: 
              schema:
                $ref: 'common_schemas-contract.yml#/components/schemas/ErrorResponseBody'
    
components:
  securitySchemes:
    BearerAuth:
      $ref: "common_schemas-contract.yml#/components/securitySchemes/BearerAuth"
  schemas:
    # Main Schemas
    CustomerUpdateRequestBody:
      type: object
      additionalProperties: false
      properties:
        companyName:
          $ref: '#/components/schemas/CompanyName'
        companyType:
          $ref: '#/components/schemas/CompanyType'
        fullName:
          $ref: '#/components/schemas/FullName'
        address:
          $ref: "#/components/schemas/Address"
        mobileNumber:
          $ref: 'common_schemas-contract.yml#/components/schemas/MobileNumber'
        email:
          $ref: '#/components/schemas/Email'
        gstNumber:
          $ref: "#/components/schemas/GstNumber"
        panNumber:
          $ref: "#/components/schemas/PanNumber"
        aadhaarNumber:
          $ref: "#/components/schemas/AadhaarNumber"
      required: ["companyName", "companyType", "fullName", "address", 
        "mobileNumber", "email", "gstNumber", "panNumber", "aadhaarNumber"]
    CustomerList:
      type: array
      items:
        $ref: "#/components/schemas/Customer"
      minItems: 0
    Customer:
      allOf:
        - $ref: "#/components/schemas/CustomerUpdateRequestBody"
        - $ref: "common_schemas-contract.yml#/components/schemas/ObjectMetaInfo"
    SalesmanUpdateRequestBody:
      type: object
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        address:
          $ref: "#/components/schemas/Address"
        email:
          $ref: '#/components/schemas/Email'
        panNumber:
          $ref: "#/components/schemas/PanNumber"
        aadhaarNumber:
          $ref: "#/components/schemas/AadhaarNumber"
        bankDetails:
          $ref: "#/components/schemas/UserBankDetails"
      required: ["fullName", "address", "mobileNumber", "email", "panNumber", "aadhaarNumber", "bankDetails"]
    SalesmanList:
      type: array
      items:
        $ref: "#/components/schemas/Salesman"
      minItems: 0
    Salesman:
      allOf:
        - $ref: "#/components/schemas/SalesmanUpdateRequestBody"
        - $ref: "common_schemas-contract.yml#/components/schemas/ObjectMetaInfo"
        - type: object
          additionalProperties: false
          properties:
            mobileNumber:
              $ref: 'common_schemas-contract.yml#/components/schemas/MobileNumber'
          required: [mobileNumber]
    AdminStaffUpdateRequestBody:
      type: object
      additionalProperties: false
      properties:
        fullName:
          $ref: '#/components/schemas/FullName'
        address:
          $ref: "#/components/schemas/Address"
        email:
          $ref: '#/components/schemas/Email'
        panNumber:
          $ref: "#/components/schemas/PanNumber"
        aadhaarNumber:
          $ref: "#/components/schemas/AadhaarNumber"
        bankDetails:
          $ref: "#/components/schemas/UserBankDetails"
      required: ["fullName", "address", "mobileNumber", "email", "panNumber", "aadhaarNumber", "bankDetails"]
    AdminStaffList:
      type: array
      items:
        $ref: "#/components/schemas/AdminStaff"
      minItems: 0
    AdminStaff:
      allOf:
        - $ref: "#/components/schemas/AdminStaffUpdateRequestBody"
        - $ref: "common_schemas-contract.yml#/components/schemas/ObjectMetaInfo"
        - type: object
          additionalProperties: false
          properties:
            mobileNumber:
              $ref: 'common_schemas-contract.yml#/components/schemas/MobileNumber'
    AdminUpdateRequestBody:
      type: object
      additionalProperties: false
      properties:
        email:
          $ref: "#/components/schemas/Email"
        fullName:
          $ref: "#/components/schemas/FullName"
    AdminList:
      type: array
      items:
        $ref: "#/components/schemas/Admin"
      minItems: 0
    Admin:
      allOf:
        - $ref: "#/components/schemas/AdminUpdateRequestBody"
        - $ref: "common_schemas-contract.yml#/components/schemas/ObjectMetaInfo"
        - type: object
          additionalProperties: false
          properties:
            mobileNumber:
              $ref: 'common_schemas-contract.yml#/components/schemas/MobileNumber'
          required: [mobileNumber]
    User:
      type: object
      additionalProperties: false
      properties:
        userType:
          $ref: "common_schemas-contract.yml#/components/schemas/UserType"
        data:
          oneOf:
            - $ref: "#/components/schemas/Admin"
            - $ref: "#/components/schemas/AdminStaff"
            - $ref: "#/components/schemas/Salesman"
            - $ref: "#/components/schemas/Customer"
          discriminator:
              propertyName: userType
              mapping:
                ADMIN: "#/components/schemas/Admin"
                ADMIN_STAFF: "#/components/schemas/AdminStaff"
                SALESMAN: "#/components/schemas/Salesman"
                CUSTOMER: "#/components/schemas/Customer"

    # Internal Schemas
    CompanyName:
      type: string
      pattern: ^[a-zA-Z ]*$
      minLength: 5
      maxLength: 50
    FullName:
      type: string
      pattern: ^[a-zA-Z ]*$
      minLength: 5
      maxLength: 50
    Email:
      type: string
      format: email
    CompanyType:
      type: string
      enum:
        - proprietorship
        - partnership
        - pvt. ltd.
      x-enum-vars:
        - PROPRIETORSHIP
        - PARTNERSHIP
        - PRIVATE_LIMITED
    GstNumber:
      type: string
      pattern: ^\d{2}[A-Z]{5}\d{4}[A-Z]{1}[A-Z\d]{1}[Z]{1}[A-Z\d]{1}$
      maxLength: 15
      minLength: 15
    PanNumber:
      type: string
      pattern: ^[A-Z]{5}[0-9]{4}[A-Z]{1}$
      maxLength: 10
      minLength: 10
    AadhaarNumber:
      type: string
      pattern: ^[01]\d{3}[\s-]?\d{4}[\s-]?\d{4}$
      maxLength: 12
      minLength: 12
    IfscCode:
      type: string
      pattern: ^[A-Z]{4}0[A-Z0-9]{6}$
      maxLength: 11
      minLength: 11
    UserBankDetails:
      type: object
      additionalProperties: false
      properties:
        accountHolderName:
          $ref: "#/components/schemas/FullName"
        ifscCode:
          $ref: "#/components/schemas/IfscCode"
        accountNumber:
          type: number
          maxLength: 18
      required: [accountHolderName, ifscCode, accountNumber]
    Address:
      type: object
      additionalProperties: false
      properties:
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        landmark:
          type: string
      required: ["line1", "line2", "city", "state", "country"]